// OSCX_SFMan.idl : IDL source for OSCX_SFMan.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (OSCX_SFMan.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
#include "olectl.h"
	

	[
		object,
		uuid(1A200131-280C-11D3-9727-8F1BC2D89209),
		dual,
		helpstring("IOSCX_SFMan Interface"),
		pointer_default(unique)
	]
	interface IOSCX_SFMan : IDispatch
	{
		[propget, id(1), helpstring("property NumDevs")] HRESULT NumDevs([out, retval] short *pVal);
		[propget, id(2), helpstring("property DevName")] HRESULT DevName([in] short deviceno, [out, retval] BSTR *pVal);
		[propget, id(3), helpstring("property IsDeviceFree")] HRESULT IsDeviceFree([in] short deviceno, [out, retval] VARIANT_BOOL *pVal);
		[id(4), helpstring("method Open")] HRESULT Open([in] short deviceno);
		[id(5), helpstring("method Close")] HRESULT Close();
		[id(6), helpstring("method LoadBank")] HRESULT LoadBank([in] short bankno, [in] BSTR path);
		[id(7), helpstring("method ClearLoadedBank")] HRESULT ClearLoadedBank([in] short bankno);
		[propget, id(8), helpstring("property CurrentOpenDevice")] HRESULT CurrentOpenDevice([out, retval] short *pVal);
		[id(9), helpstring("method ClearAllLoadedBanks")] HRESULT ClearAllLoadedBanks();
		[propget, id(10), helpstring("property BoolIsMIDIBankUsed")] HRESULT BoolIsMIDIBankUsed([in] short bankno, [out, retval] VARIANT_BOOL *pVal);
		[propget, id(11), helpstring("property LoadedBankDescriptor")] HRESULT LoadedBankDescriptor([in] short bankno, [out, retval] BSTR *pVal);
		[propget, id(12), helpstring("property IsMIDIBankUsed")] HRESULT IsMIDIBankUsed([in] short bankno, [out, retval] short *pVal);
		[propget, id(13), helpstring("property LoadedBankPathname")] HRESULT LoadedBankPathname([in] short bankno, [out, retval] BSTR *pVal);
		[id(14), helpstring("method LoadPreset")] HRESULT LoadPreset([in] short sourceBankno, [in] short sourcePreset, [in] short destBankno, [in] short destPreset, [in] BSTR path);
		[id(15), helpstring("method ClearLoadedPreset")] HRESULT ClearLoadedPreset([in] short bankno, [in] short preset);
		[id(16), helpstring("method LoadWaveform")] HRESULT LoadWaveform([in] short destBankno, [in] short destPreset, [in] BSTR path);
		[id(17), helpstring("method ClearLoadedWaveform")] HRESULT ClearLoadedWaveform([in] short bankno, [in] short preset);
		[propget, id(18), helpstring("property StaticSampleMemorySizeMax")] HRESULT StaticSampleMemorySizeMax([out, retval] long *pVal);
		[propget, id(19), helpstring("property StaticSampleMemorySizeAvail")] HRESULT StaticSampleMemorySizeAvail([out, retval] long *pVal);
		[propget, id(20), helpstring("property NumSynthEmulations")] HRESULT NumSynthEmulations([out, retval] short *pVal);
		[propget, id(21), helpstring("property SynthEmulationDescription")] HRESULT SynthEmulationDescription([in] short emulationno, [out, retval] BSTR *pVal);
		[propget, id(22), helpstring("property CurrentSynthEmulation")] HRESULT CurrentSynthEmulation([out, retval] short *pVal);
	};

[
	uuid(1A200123-280C-11D3-9727-8F1BC2D89209),
	version(1.0),
	helpstring("OSCX_SFMan 1.0 Type Library")
]
library OSCX_SFMANLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(1A200133-280C-11D3-9727-8F1BC2D89209),
		helpstring("_IOSCX_SFManEvents Interface")
	]
	dispinterface _IOSCX_SFManEvents
	{
		properties:
		methods:
	};

	[
		uuid(1A200132-280C-11D3-9727-8F1BC2D89209),
		helpstring("OSCX_SFMan")
	]
	coclass OSCX_SFManControl
	{
		[default] interface IOSCX_SFMan;
		[default, source] dispinterface _IOSCX_SFManEvents;
	};
};
